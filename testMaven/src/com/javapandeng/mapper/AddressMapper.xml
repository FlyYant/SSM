<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.AddressMapper">
    <!-- 实体类与数据库映射字段部分 -->
    <resultMap id="ResultMapAddress" type="com.javapandeng.po.Address">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="posCode" column="posCode" jdbcType="VARCHAR"/>
        <result property="consignee" column="consignee" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="dfault" column="dfault" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ResultMapAddressDto" type="com.javapandeng.po.Address">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="posCode" column="posCode" jdbcType="VARCHAR"/>
        <result property="consignee" column="consignee" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="dfault" column="dfault" jdbcType="INTEGER"/>
        <association property="user" column="userId" select="com.javapandeng.mapper.UserMapper.load"/>
    </resultMap>

    <!-- 声明数据库字段 -->
    <sql id="Address_field">
        id,userId,address,posCode,consignee,phone,dfault
    </sql>

    <!-- 实体类属性 -->
    <sql id="Address_insert">
        #{id},#{userId},#{address},#{posCode},#{consignee},#{phone},#{dfault}
    </sql>

    <!-- 更新结果 -->
    <sql id="Address_update">
        <if test="userId != null">
            userId = #{userId},
        </if>
        <if test="address != null">
            address = #{address},
        </if>
        <if test="posCode != null">
            posCode = #{posCode},
        </if>
        <if test="consignee != null">
            consignee = #{consignee},
        </if>
        <if test="phone != null">
            phone = #{phone},
        </if>
        <if test="dfault != null">
            dfault = #{dfault}
        </if>
    </sql>

    <!-- 查询时的条件 -->
    <sql id="Address_where">
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="userId != null">
            and userId = #{userId}
        </if>
        <if test="address != null">
            and address = #{address}
        </if>
        <if test="posCode != null">
            and posCode = #{posCode}
        </if>
        <if test="consignee != null">
            and consignee = #{consignee}
        </if>
        <if test="phone != null">
            and phone = #{phone}
        </if>
        <if test="dfault != null">
            and dfault = #{dfault}
        </if>
    </sql>

    <!-- 新增 -->
    <!-- 参数：实体类 -->
    <!-- 返回：主键 -->
    <insert id="insert" parameterType="com.javapandeng.po.Address" useGeneratedKeys="true" keyProperty="id">
        insert into address(
        <include refid="Address_field"/>
        ) values(
        <include refid="Address_insert"/>
        )
    </insert>

    <!-- 根据实体主键删除一个实体 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from address where id=#{id}
    </delete>

    <!-- 通过实体删除 -->
    <delete id="deleteByEntity" parameterType="com.javapandeng.po.Address">
        delete from address where 1=1
        <include refid="Address_where"/>
    </delete>

    <!-- 通过map删除 -->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from address where 1=1
        <include refid="Address_where"/>
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.javapandeng.po.Address">
        update address
        <set>
            <include refid="Address_update"/>
        </set>
        where 1=1
            <include refid="Address_where"/>
    </update>

    <!-- 通过id进行修改 -->
    <update id="updateById" parameterType="com.javapandeng.po.Address">
        update address
        <set>
            <include refid="Address_update"/>
        </set>
        where id = #{id}
    </update>

    <!-- 根据参数查询 -->
    <select id="listByMap" resultMap="ResultMapAddress" parameterType="map">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapAddress">
        select <include refid="Address_field"/>
        from address
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体 -->
    <select id="listAllByEntity" resultMap="ResultMapAddress" parameterType="com.javapandeng.po.Address">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 根据主键获取一个实体 -->
    <select id="load" resultMap="ResultMapAddress" parameterType="java.lang.Integer">
        select <include refid="Address_field"/>
        from address where id=#{id}
    </select>

    <!-- 根据主键获取一个实体 -->
    <select id="getById" resultMap="ResultMapAddress" parameterType="java.lang.Integer">
        select <include refid="Address_field"/>
        from address where id=#{id}
    </select>

    <!-- 通过map查询-不分页 -->
    <select id="getByMap" resultMap="ResultMapAddress" parameterType="map">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 通过对象查询-不分页 -->
    <select id="getByEntity" resultMap="ResultMapAddress" parameterType="com.javapandeng.po.Address">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 通过map查询分页 -->
    <select id="findByMap" resultMap="ResultMapAddress" parameterType="map">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 通过对象查询分页 -->
    <select id="findByEntity" resultMap="ResultMapAddress" parameterType="com.javapandeng.po.Address">
        select <include refid="Address_field"/>
        from address where 1=1
        <include refid="Address_where"/>
    </select>

    <!-- 批量新增 -->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into address(
        <include refid="Address_field"/>
        ) values(
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId},#{item.address},#{item.posCode},#{item.consignee},#{item.phone},#{item.dfault})
        </foreach>
        )
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update address
            <set>
                <if test="item.userId != null">
                    userId = #{item.userId},
                </if>
                <if test="item.address != null">
                    address = #{item.address},
                </if>
                <if test="item.posCode != null">
                    posCode = #{item.posCode},
                </if>
                <if test="item.consignee != null">
                    consignee = #{item.consignee},
                </if>
                <if test="item.phone != null">
                    phone = #{item.phone},
                </if>
                <if test="item.dfault != null">
                    dfault = #{item.dfault}
                </if>
            </set>
            where 1=1
            <if test="item.id != null">
                and id = #{item.id}
            </if>
        </foreach>
    </update>

    <!-- 封装纯sql语法 -->
    <!-- 查询一个对象返回map -->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类 -->
    <select id="getBySqlReturnEntity" resultMap="ResultMapAddress">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表 -->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体 -->
    <select id="listBySqlReturnEntity" resultMap="ResultMapAddressDto">
        ${sql}
    </select>

    <!-- 查询分页 -->
    <select id="findBySqlRerturnEntity" resultMap="ResultMapAddressDto">
        ${sql}
    </select>

    <!-- 通过sql修改 -->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除 -->
    <delete id="deleteBySql">
        ${sql}
    </delete>
</mapper>