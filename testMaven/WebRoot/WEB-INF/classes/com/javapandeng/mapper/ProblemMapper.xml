<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javapandeng.mapper.ProblemMapper">
    <!-- 实体类与数据库映射字段部分 -->
    <resultMap id="ResultMapProblem" type="com.javapandeng.po.Problem">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="productId" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="solve" column="solve" jdbcType="VARCHAR"/>
        <result property="solveTime" column="solveTime" jdbcType="TIMESTAMP"/>
        <result property="url1" column="url1" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="ResultMapProblemDto" type="com.javapandeng.po.Problem">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="productId" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="solve" column="solve" jdbcType="VARCHAR"/>
        <result property="solveTime" column="solveTime" jdbcType="TIMESTAMP"/>
        <result property="url1" column="url1" jdbcType="VARCHAR"/>
        <association property="product" column="productId" select="com.javapandeng.mapper.ProductMapper.load"/>
        <association property="user" column="userId" select="com.javapandeng.mapper.UserMapper.load"/>
    </resultMap>

    <!-- 声明数据库字段 -->
    <sql id="Problem_field">
        id,productId,userId,content,solve,solveTime,url1
    </sql>

    <!-- 实体类属性 -->
    <sql id="Problem_insert">
        #{id},#{productId},#{userId},#{content},#{solve},#{solveTime},#{url1}
    </sql>

    <!-- 更新结果 -->
    <sql id="Problem_update">
        <if test="productId != null">
            productId = #{productId},
        </if>
        <if test="userId != null">
            userId = #{userId},
        </if>
        <if test="content != null">
            content = #{content},
        </if>
        <if test="solve != null">
            solve = #{solve},
        </if>
        <if test="solveTime != null">
            solveTime = #{solveTime}
        </if>
        <if test="url1 != null">
            url1 = #{url1}
        </if>
    </sql>

    <!-- 查询时的条件 -->
    <sql id="Problem_where">
        <if test="id != null">
            and id = #{id}
        </if>
        <if test="productId != null">
            and productId = #{productId}
        </if>
        <if test="userId != null">
            and userId = #{userId}
        </if>
        <if test="content != null">
            and content = #{content}
        </if>
        <if test="solve != null">
            and solve = #{solve}
        </if>
        <if test="solveTime != null">
            and solveTime = #{solveTime}
        </if>
        <if test="url1 != null">
            and url1 = #{url1}
        </if>
    </sql>

    <!-- 新增 -->
    <!-- 参数：实体类 -->
    <!-- 返回：主键 -->
    <insert id="insert" parameterType="com.javapandeng.po.Problem" useGeneratedKeys="true" keyProperty="id">
        insert into problem(
        <include refid="Problem_field"/>
        ) values(
        <include refid="Problem_insert"/>
        )
    </insert>

    <!-- 根据实体主键删除一个实体 -->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from problem where id=#{id}
    </delete>

    <!-- 通过实体删除 -->
    <delete id="deleteByEntity" parameterType="com.javapandeng.po.Problem">
        delete from problem where 1=1
        <include refid="Problem_where"/>
    </delete>

    <!-- 通过map删除 -->
    <delete id="deleteByMap" parameterType="java.util.HashMap">
        delete from problem where 1=1
        <include refid="Problem_where"/>
    </delete>

    <!-- 更新一个实体 -->
    <update id="update" parameterType="com.javapandeng.po.Problem">
        update problem
        <set>
            <include refid="Problem_update"/>
        </set>
        where 1=1
            <include refid="Problem_where"/>
    </update>

    <!-- 通过id进行修改 -->
    <update id="updateById" parameterType="com.javapandeng.po.Problem">
        update problem
        <set>
            <include refid="Problem_update"/>
        </set>
        where id = #{id}
    </update>

    <!-- 根据参数查询 -->
    <select id="listByMap" resultMap="ResultMapProblem" parameterType="map">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 查询整个表 -->
    <select id="listAll" resultMap="ResultMapProblem">
        select <include refid="Problem_field"/>
        from problem
    </select>

    <!-- 查询所有实体,根据实体属性值为判断条件查询所有实体 -->
    <select id="listAllByEntity" resultMap="ResultMapProblem" parameterType="com.javapandeng.po.Problem">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 根据主键获取一个实体 -->
    <select id="load" resultMap="ResultMapProblem" parameterType="java.lang.Integer">
        select <include refid="Problem_field"/>
        from problem where id=#{id}
    </select>

    <!-- 根据主键获取一个实体 -->
    <select id="getById" resultMap="ResultMapProblem" parameterType="java.lang.Integer">
        select <include refid="Problem_field"/>
        from problem where id=#{id}
    </select>

    <!-- 通过map查询-不分页 -->
    <select id="getByMap" resultMap="ResultMapProblem" parameterType="map">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 通过对象查询-不分页 -->
    <select id="getByEntity" resultMap="ResultMapProblem" parameterType="com.javapandeng.po.Problem">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 通过map查询分页 -->
    <select id="findByMap" resultMap="ResultMapProblem" parameterType="map">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 通过对象查询分页 -->
    <select id="findByEntity" resultMap="ResultMapProblem" parameterType="com.javapandeng.po.Problem">
        select <include refid="Problem_field"/>
        from problem where 1=1
        <include refid="Problem_where"/>
    </select>

    <!-- 根据商品id查询对象列表 -->
    <select id="listByProductId" resultMap="ResultMapProblemDto">
        select <include refid="Problem_field"/>
        from problem where productId = #{id} and solveTime is not null order by id desc
    </select>

    <!-- 批量新增 -->
    <insert id="insertBatch" parameterType="java.util.List">
        insert into problem(
        <include refid="Problem_field"/>
        ) values(
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.productId},#{item.userId},#{item.content},#{item.solve},#{item.solveTime},#{item.url1})
        </foreach>
        )
    </insert>

    <!-- 批量修改 -->
    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update problem
            <set>
                <if test="item.productId != null">
                    productId = #{item.productId},
                </if>
                <if test="item.userId != null">
                    userId = #{item.userId},
                </if>
                <if test="item.content != null">
                    content = #{item.content},
                </if>
                <if test="item.solve != null">
                    solve = #{item.solve},
                </if>
                <if test="item.solveTime != null">
                    solveTime = #{item.solveTime},
                </if>
                <if test="item.url1 != null">
                    url1 = #{item.url1},
                </if>
            </set>
            where 1=1
            <if test="item.id != null">
                and id = #{item.id}
            </if>
        </foreach>
    </update>

    <!--  -->

    <!-- 封装纯sql语法 -->
    <!-- 查询一个对象返回map -->
    <select id="getBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询一个对象返回实体类 -->
    <select id="getBySqlReturnEntity" resultMap="ResultMapProblem">
        ${sql}
    </select>

    <!-- 查询一个对象返回map列表 -->
    <select id="listBySqlReturnMap" resultType="map">
        ${sql}
    </select>

    <!-- 查询列表返回实体 -->
    <select id="listBySqlReturnEntity" resultMap="ResultMapProblemDto">
        ${sql}
    </select>

    <!-- 查询分页 -->
    <select id="findBySqlRerturnEntity" resultMap="ResultMapProblemDto">
        ${sql}
    </select>

    <!-- 通过sql修改 -->
    <update id="updateBysql">
        ${sql}
    </update>

    <!-- 通过sql删除 -->
    <delete id="deleteBySql">
        ${sql}
    </delete>


</mapper>